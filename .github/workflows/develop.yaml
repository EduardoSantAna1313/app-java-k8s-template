name: 'Develop'

on:
  push:
    branches: [ "develop" ]
  pull_request:

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ASSUME_ROLE: ${{ vars.AWS_ASSUME_ROLE }}
  REPOSITORY_NAME: ${{ github.event.repository.name }}
  BUCKET_CODE: ${{ vars.BUCKET_CODE }}
  ENVIRONMENT: "dev"

jobs:
  # Build the code
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      working-directory: app
      run: mvn -B package --file pom.xml

    # Delete files
    - name: Deleting all files from Bucket
      run: aws s3 rm --recursive s3://$BUCKET_CODE

    # Upload Atifacts 
    - name: Upload Lambda package to S3
      working-directory: app
      run: |
        aws s3 sync dist/app s3://$BUCKET_CODE
  
  build-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      working-directory: app
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

  #deploy-k8s:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v3
  #
  #    # Configure aws credentials with assumerole
  #    - name: Configure AWS Credentials
  #      uses: aws-actions/configure-aws-credentials@v3
  #      with:
  #        role-to-assume: ${{ env.AWS_ASSUME_ROLE }}
  #        aws-region: ${{ env.AWS_REGION }}
  #        role-session-name: github_actions_oidc_role
  #
  #   - name: Deploy Kubernetes
  #      working-directory: infra
  #      run: kubectl apply -f .